package qf;

import d5.w;
import ie.m;
import java.util.LinkedHashMap;
import java.util.Set;
import je.C;
import je.D;
import je.I;
import je.n;
import je.q;

public final class h {
    public static final b A;
    public static final b B;
    public static final b C;
    public static final b D;
    public static final Object E;
    public static final Object F;
    public static final c a;
    public static final c b;
    public static final c c;
    public static final c d;
    public static final c e;
    public static final c f;
    public static final c g;
    public static final c h;
    public static final Set i;
    public static final Set j;
    public static final b k;
    public static final b l;
    public static final b m;
    public static final b n;
    public static final b o;
    public static final b p;
    public static final b q;
    public static final b r;
    public static final b s;
    public static final b t;
    public static final b u;
    public static final b v;
    public static final b w;
    public static final Set x;
    public static final Set y;
    public static final Set z;

    static {
        c c0 = new c("kotlin");
        h.a = c0;
        c c1 = c0.a(e.e("reflect"));
        h.b = c1;
        c0.a(e.e("experimental"));
        c c2 = c0.a(e.e("collections"));
        h.c = c2;
        c0.a(e.e("sequences"));
        c c3 = c0.a(e.e("ranges"));
        h.d = c3;
        c c4 = c0.a(e.e("jvm"));
        c0.a(e.e("js"));
        c0.a(e.e("annotations")).a(e.e("jvm"));
        c4.a(e.e("internal"));
        c4.a(e.e("functions"));
        c c5 = c0.a(e.e("annotation"));
        h.e = c5;
        c c6 = c0.a(e.e("internal"));
        c6.a(e.e("ir"));
        c c7 = c0.a(e.e("coroutines"));
        h.f = c7;
        c7.a(e.e("intrinsics"));
        h.g = c0.a(e.e("enums"));
        c0.a(e.e("contracts"));
        c c8 = c0.a(e.e("concurrent")).a(e.e("atomics"));
        h.h = c8;
        c0.a(e.e("test"));
        c0.a(e.e("text"));
        h.i = n.A0(new c[]{c0, c2, c3, c5});
        h.j = n.A0(new c[]{c0, c2, c3, c5, c1, c6, c7, c8});
        w.i("Nothing");
        h.k = w.i("Unit");
        h.l = w.i("Any");
        h.m = w.i("Enum");
        w.i("Annotation");
        h.n = w.i("Array");
        b b0 = w.i("Boolean");
        h.o = b0;
        b b1 = w.i("Char");
        b b2 = w.i("Byte");
        b b3 = w.i("Short");
        b b4 = w.i("Int");
        h.p = b4;
        b b5 = w.i("Long");
        h.q = b5;
        b b6 = w.i("Float");
        b b7 = w.i("Double");
        h.r = w.n(b2);
        h.s = w.n(b3);
        h.t = w.n(b4);
        h.u = w.n(b5);
        w.i("CharSequence");
        h.v = w.i("String");
        w.i("Throwable");
        w.i("Cloneable");
        w.m("KProperty");
        w.m("KMutableProperty");
        w.m("KProperty0");
        w.m("KMutableProperty0");
        w.m("KProperty1");
        w.m("KMutableProperty1");
        w.m("KProperty2");
        w.m("KMutableProperty2");
        h.w = w.m("KFunction");
        w.m("KClass");
        w.m("KCallable");
        w.m("KType");
        w.i("Comparable");
        w.i("Number");
        w.i("Function");
        Set set0 = n.A0(new b[]{b0, b1, b2, b3, b4, b5, b6, b7});
        h.x = set0;
        h.y = n.A0(new b[]{b2, b3, b4, b5});
        int v = D.N(q.Q(10, set0));
        int v1 = 16;
        if(v < 16) {
            v = 16;
        }
        LinkedHashMap linkedHashMap0 = new LinkedHashMap(v);
        for(Object object0: set0) {
            linkedHashMap0.put(object0, w.l(((b)object0).f()));
        }
        w.k(linkedHashMap0);
        Set set1 = n.A0(new b[]{h.r, h.s, h.t, h.u});
        h.z = set1;
        int v2 = D.N(q.Q(10, set1));
        if(v2 >= 16) {
            v1 = v2;
        }
        LinkedHashMap linkedHashMap1 = new LinkedHashMap(v1);
        for(Object object1: set1) {
            linkedHashMap1.put(object1, w.l(((b)object1).f()));
        }
        w.k(linkedHashMap1);
        I.L(I.K(h.x, h.z), h.v);
        e e0 = e.e("Continuation");
        kotlin.jvm.internal.q.g(h.f, "packageFqName");
        d5.n.E(e0).a.c();
        w.j("Iterator");
        w.j("Iterable");
        w.j("Collection");
        w.j("List");
        w.j("ListIterator");
        w.j("Set");
        b b8 = w.j("Map");
        w.j("AbstractMap");
        w.j("MutableIterator");
        w.j("CharIterator");
        w.j("MutableIterable");
        w.j("MutableCollection");
        h.A = w.j("MutableList");
        w.j("MutableListIterator");
        h.B = w.j("MutableSet");
        b b9 = w.j("MutableMap");
        h.C = b9;
        b8.d(e.e("Entry"));
        b9.d(e.e("MutableEntry"));
        w.i("Result");
        e e1 = e.e("IntRange");
        kotlin.jvm.internal.q.g(h.d, "packageFqName");
        d5.n.E(e1).a.c();
        e e2 = e.e("LongRange");
        kotlin.jvm.internal.q.g(h.d, "packageFqName");
        d5.n.E(e2).a.c();
        e e3 = e.e("CharRange");
        kotlin.jvm.internal.q.g(h.d, "packageFqName");
        d5.n.E(e3).a.c();
        e e4 = e.e("AnnotationRetention");
        kotlin.jvm.internal.q.g(h.e, "packageFqName");
        d5.n.E(e4).a.c();
        e e5 = e.e("AnnotationTarget");
        kotlin.jvm.internal.q.g(h.e, "packageFqName");
        d5.n.E(e5).a.c();
        w.i("DeprecationLevel");
        e e6 = e.e("EnumEntries");
        h.D = new b(h.g, e6);
        b b10 = w.h("AtomicBoolean");
        b b11 = w.h("AtomicInt");
        b b12 = w.h("AtomicLong");
        w.h("AtomicReference");
        h.E = C.S(new m[]{new m(h.o, b10), new m(h.p, b11), new m(h.q, b12)});
        w.h("AtomicArray");
        b b13 = w.h("AtomicIntArray");
        b b14 = w.h("AtomicLongArray");
        h.F = C.S(new m[]{new m(h.p, b13), new m(h.q, b14)});
        I.L(I.L(I.L(I.L(I.K(h.x, h.z), h.v), h.k), h.l), h.m);
    }
}

